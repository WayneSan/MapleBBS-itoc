µo«H¤H: itoc.bbs@processor.tfcis.org (®Ö¤ß°Ê¤O) ¬ÝªO: plan
¼Ð  ÃD: Re: Ãö©ó "ª©¥D§R¤å®É¦Û¦æ³]©w²z¥Ñ"
µo«H¯¸: °Ê¤O®Ö¤ß (2004/02/24 Tue 23:47:52)                Updated: 2006/07/04

¡° ¤Þ­z¡mLoveforever.bbs@wretch.csie.nctu.edu.tw (³p»»¦p­·..)¡n¤§»Ê¨¥¡G
> Ãö©ó "ª©¥D§R¤å®É¦Û¦æ³]©w²z¥Ñ"
> ©Î¬OItoc´¿¸g¦b­þ­Ó¯¸µoªí¹L©O?!
> ·Q´M§ä³o­Ó¥\¯à

  §â§R°£ªº¤å³¹¥[¤W POST_ERASE ºX¼Ð

: hdr.h

- #define POST_5        0x00000010
+ #define POST_ERASE    0x00000010      /* ³Q§R°£ªº¤å³¹ */

- #define MAIL_5        0x00000010
+ #define MAIL_ERASE    0x00000010

: post.c:post_delete() ¦pªG­n¦³¿é¤J²z¥Ñªº¥\¯à´N³o¼Ë§ï

  if (vans(msg_del_ny) == 'y')
  {
    currchrono = hdr->chrono;
+   if (by_BM && vget(b_lines, 0, "½Ð¿é¤J§R¤å²z¥Ñ", buf, 40, DOECHO))
+     sprintf(hdr->title, "%s §R°£²z¥Ñ¡G%s", cuser.userid, buf);
+   else
+     sprintf(hdr->title, "<< ¥»¤å³¹¸g %s §R°£ >>", cuser.userid);
+   hdr->xmode = POST_ERASE | (hdr->xmode & POST_BOTTOM);

: post.c:post_delete() ¦pªG¤£­n¦³¿é¤J²z¥Ñªº¥\¯à«h³o¼Ë§ï

  if (vans(msg_del_ny) == 'y')
  {
    currchrono = hdr->chrono;
+   sprintf(hdr->title, "<< ¥»¤å³¹¸g %s §R°£ >>", cuser.userid);
+   hdr->xmode = POST_ERASE | (hdr->xmode & POST_BOTTOM);

: post.c:post_delete()

-   if (!rec_del(xo->dir, sizeof(HDR), xo->key == XZ_XPOST ?
-     hdr->xid : pos, cmpchrono))
+   if (!rec_put(xo->dir, hdr, sizeof(HDR), xo->key == XZ_XPOST ?
+     hdr->xid : pos, cmpchrono))
    {

: post.c:move_post()

- if (by_bm)
-   sprintf(post.title, "%-13s%.59s", cuser.userid, hdr->title);
- else if (!stat(fpath, &st))
+ if (!stat(fpath, &st))
    by_bm = st.st_size;

> ¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w <

  ¦³ POST_ERASE ºX¼ÐªºÅã¥Ü d¡A¨Ãµø¬°¤wÅª

: post.c:post_attr()

  attr = ((mode & POST_BOTTOM) || !brh_unread(hdr->chrono) || 
+   (mode & POST_ERASE) || 
    !chkrestrict(hdr)) ? 0x20 : 0;

  ...
  ...

+ if (mode & POST_ERASE)
+   attr |= 'D';
#ifdef HAVE_REFUSEMARK
  if (mode & POST_RESTRICT)
    attr |= 'X';
  else
#endif

> ¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w <

  ±µ¤U¨Ó­nÅý¦³ POST_ERASE ºX¼Ðªº¤°»ò°Ê§@³£¤£¯à°µ

: post.c:post_reply()

+   if (hdr->xmode & POST_ERASE)
+     return XO_NONE;

#ifdef HAVE_REFUSEMARK
    if (!chkrestrict(hdr))
      return XO_NONE;
#endif

: post.c:post_browse()

+   if (xmode & POST_ERASE)
+     break;

#ifdef HAVE_REFUSEMARK
    if (!chkrestrict(hdr))
      break;
#endif

: post.c:post_cross()

+     if (hdr->xmode & POST_ERASE)
+       continue;

#ifdef HAVE_REFUSEMARK
      if (hdr->xmode & POST_RESTRICT)
        continue;
#endif

: post.c:post_forward()

+ if (hdr->xmode & POST_ERASE)
+   return XO_NONE;

#ifdef HAVE_REFUSEMARK
  if (!chkrestrict(hdr))
    return XO_NONE;
#endif

: post.c:post_edit()

  hdr = (HDR *) xo_pool + (xo->pos - xo->top);

+ if (hdr->xmode & POST_ERASE)
+   return XO_NONE;

: post.c:post_score()

+ if (hdr->xmode & POST_ERASE)
+   return XO_NONE;

#ifdef HAVE_REFUSEMARK
  if (!chkrestrict(hdr))
    return XO_NONE;
#endif

: xpost.c:XoXpost() ¤Î xpost.c:XoNews()

+   if (head->xmode & POST_ERASE)
+     continue;

#ifdef HAVE_REFUSEMARK
    if (!chkrestrict(hdr))
      continue;
#endif

: xover.c:xo_thread()

+   if (hdr->xmode & POST_ERASE)
+     continue;

#ifdef HAVE_REFUSEMARK
    if (!chkrestrict(hdr))
      continue;
#endif

: gemc.c:gem_extend()

-   if ((hdr->chrono != chrono) &&
-     !(hdr->xmode & (GEM_FOLDER | GEM_RESTRICT | GEM_RESERVED)))
+   if ((hdr->chrono != chrono) &&
+     !(hdr->xmode & (GEM_FOLDER | GEM_RESTRICT | GEM_RESERVED | POST_ERASE)))
    {
      hdr_fpath(gpath, GemFolder, hdr);
      fputs(str_line, fp);
      f_suck(fp, gpath);
    }

: gem.c:gem_do_paste()

+ if (xmode & POST_ERASE)
+   return;

  if (xmode & (GEM_RESTRICT | GEM_RESERVED))  /* ­­¨î¯ÅºëµØ°Ï¤£¯à½Æ»s/¶K¤W */
    return;

: gem.c:gem_gather()

+   if (xmode & POST_ERASE)
+     continue;

    if (xmode & (GEM_RESTRICT | GEM_RESERVED))  /* ­­¨î¯ÅºëµØ°Ï¤£¯à©wÁã¦¬¿ý */
      continue;


> ¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w¢w <

  ³Ì«á¦b expire ®É­n¬å±¼¦³ POST_ERASE ºX¼Ðªº¤å³¹

: expire.c:expire()

  while (fread(&hdr, sizeof(hdr), 1, fpr) == 1)
  {
+   if (hdr.xmode & POST_ERASE)
+     keep = 0;
+   else if (hdr.xmode & POST_MARKED || total <= minp)
-   if (hdr.xmode & POST_MARKED || total <= minp)
      keep = 1;
    else if (hdr.chrono < duetime || total > maxp)
      keep = 0;
    else
      keep = 1;


--
 [1;43m¢~[46m¢q[m Or[1mig[30min[m: [41m Maple-itoc£»°Ê¤O®Ö¤ß [32;47m processor.tfcis.org [m
 [1;44m¢q[41m¢£[m A[1mut[30mho[mr: [1;33mitoc [30m±q [35m140.113.191.193 [30mµoªí[m
